apply plugin: 'com.android.library'
//apply plugin: 'com.novoda.bintray-release'

def version_code = 62
def version_name = "3.0.5"

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.2"

    resourcePrefix "zhou_"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode version_code
        versionName version_name
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
//    compile 'com.zzhoujay.markdown:markdown:1.0.5'
    compile project(":markdown")
    compile project(":htmlcompat")
    compile 'com.jakewharton:disklrucache:2.0.2'
    compile 'com.android.support:support-v4:25.4.0'
}

//publish {
//
//    Properties properties = new Properties()
//    properties.load(project.rootProject.file('local.properties').newDataInputStream())
//    userOrg = properties.getProperty("bintray.user")
//    bintrayUser=properties.getProperty("bintray.user")
//    bintrayKey=properties.getProperty("bintray.key")
//
//    groupId = "com.zzhoujay.richtext"
//    artifactId = 'richtext'
//    publishVersion = version_name
//    desc = 'Android端的富文本解析器'
//    website = 'https://github.com/zzhoujay/RichTex'
//
//}

//region jitpack
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.enbandari'

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
//endregion
